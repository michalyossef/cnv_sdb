/**
 * @param options:
 *        **All options are optional**
 *            issoGenerateUrl {string}: isso generate token url
 *            localValidationPath {string}: local path to use for isso token validation
 *            getIssoInfo {function}: (will be passed req object) returns isso information. If not provided, req.session will be attempted.
 * @returns {Function}
 */
module.exports = function (options) {
	var redirectUrlParameterName;
	var originalUrlParameterName;
	options = options || {};
	options.tokenGenerateUrl = options.tokenGenerateUrl || 'https://iamws-i.intel.com/api/v1/Windows/Auth';
	redirectUrlParameterName = 'redirectUrl';
	originalUrlParameterName = 'originalUrl';
	options.localValidationPath = options.localValidationPath || '/validateisso';

	return function (req, res, next) {
		var issoInfo;

		if (options.overrides && req.session) {
			req.session.isso = options.overrides;
			return next();
		}

		if (typeof options.getIssoInfo === 'function') {
			issoInfo = options.getIssoInfo(req);
		}
		else {
			if (req.session) {
				issoInfo = req.session.isso;
			}
		}
		if (issoInfo && issoInfo.idsid) {
			return next();
		}
		var protocol;
		if (req.headers['x-forwarded-proto'] == 'https') { //in ICAP https traffic comes with x-forwarded-proto header
			protocol = 'https';
		}
		else {
			protocol = req.protocol;
		}
		var baseUrl = protocol + '://' + req.get('host');
		var gotoUrl = options.tokenGenerateUrl;
		gotoUrl += '?' + redirectUrlParameterName + '=' + encodeURIComponent(baseUrl + options.localValidationPath + encodeURIComponent('?' + originalUrlParameterName + '=' + encodeURIComponent(baseUrl + req.originalUrl)));
		return res.redirect(302, gotoUrl);
	}
};
